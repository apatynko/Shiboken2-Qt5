name: Linux Release

on:
  push:
    branches:
      - 'main'      
    tags:
      - 'v*'
  pull_request:
    branches:
    - 'main'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     shibokenpyside2-linux-build.AppImage

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version:      ${{ env.QT_VERSION }}
          host:         linux
          target:       desktop
          arch:         gcc_64
          dir:          ${{ runner.temp }}
          install-deps: true
          setup-python: false
              
      - name: Create build directory
        run:  mkdir ${{ env.SOURCE_DIR }}/build

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      #llvm-6.0 virtualenvwrapper python3 python3-dev cmake build-essential git clang-6.0 libclang-6.0-dev libxslt-dev mesa-common-dev libgl1-mesa-glx libglib2.0-0 wget 
      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y llvm-6.0 virtualenvwrapper python3 python3-dev cmake build-essential git clang-6.0 libclang-6.0-dev libxslt-dev mesa-common-dev libgl1-mesa-glx libglib2.0-0 wget
            python -m pip install --upgrade pip
            python -m pip install sphinx

      - name: Set up CLANG
        run: |
            wget https://download.qt.io/development_releases/prebuilt/libclang/libclang-release_100-based-linux-Rhel7.6-gcc5.3-x86_64.7z
            7z x libclang-release_100-based-linux-Rhel7.6-gcc5.3-x86_64.7z
            echo "CLANG_INSTALL_DIR=$PWD/libclang" >> $GITHUB_ENV

      - name: Set up CMake
        run: |
              wget https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.tar.gz
              tar xvf cmake-3.13.2-Linux-x86_64.tar.gz
              echo "PATH=$PWD/cmake-3.13.2-Linux-x86_64/bin/:$PATH" >> $GITHUB_ENV
      
      - name: Build PySide2 and Shiboken2
        run: |
              python setup.py build --qmake=${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/gcc_64/bin/qmake --build-tests --ignore-git --parallel=2
        
      - name: Install PySide2 and Shiboken2
        run: |
              python setup.py install --qmake=${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/gcc_64/bin/qmake --build-tests --ignore-git --parallel=2
    
      - name: Build Example_Qt_and_Shiboken2-master
        run: |
              cd ${{ env.SOURCE_DIR }}/Example_Qt_and_Shiboken2-master
              mkdir build
              cd build
              cmake ..
        
      - name: Run main.py
        run: |
              cd ${{ env.SOURCE_DIR }}/Example_Qt_and_Shiboken2-master
              python main.py